version: 2.1

### It's a good practice to keep your commands at the top of the config file. In this project, you'll need at least 2 commands:

# commands:
#   destroy-environment:
#     description: Destroy backend and frontend cloudformation stacks given a workflow ID.
#     ...

#   revert-migration:
#     description: Revert the last migration if successfully run in the current workflow.
#     ...

jobs:
  build-frontend:
    docker:
      - image: cimg/node:12.16
    steps:
      - checkout
      - run:
          name: Build frontend
          command: |
            cd frontend
            npm i
            npm run build

  build-backend:
    docker:
      - image: cimg/node:12.16
    steps:
      - checkout
      - run:
          name: Build backend
          command: |
            cd backend
            npm i
            npm run build

  test-frontend:
    docker:
      - image: cimg/node:12.16
    steps:
      - checkout
      - run:
          name: Test frontend
          command: |
            cd frontend
            npm i
            npm test

  test-backend:
    docker:
      - image: cimg/node:12.16
    steps:
      - checkout
      - run:
          name: Test backend
          command: |
            cd backend
            npm i
            npm test

  scan-frontend:
    docker:
      - image: cimg/node:12.16
    steps:
      - checkout
      - run:
          name: Scan vulnerabilities frontend
          command: |
            cd frontend
            npm i
            npm audit --audit-level=critical

  scan-backend:
    docker:
        - image: cimg/node:12.16
      steps:
        - checkout
        - run:
            name: Scan vulnerabilities backend
            command: |
              cd backend
              npm i
              npm audit --audit-level=critical

#  deploy-infrastructure:

#  configure-infrastructure:

#  run-migrations:

#  deploy-frontend:

#  deploy-backend:

#  smoke-test:

#  cloudfront-update:

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires:
            - build-frontend
      - test-backend:
          requires:
            - build-backend
